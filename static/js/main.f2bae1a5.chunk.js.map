{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","className","style","backgroundColor","protoTypes","PropTypes","string","isRequired","func","defaultProps","Header","title","onAddClick","showForm","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","time","Tasks","tasks","map","AddTask","onAddTask","useState","setText","date","setDate","setReminder","uuidv4","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","name","checked","currentTarget","Footer","App","setTasks","setShowForm","length","filter","taskId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2bae1a5.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n    return (\r\n        <div>\r\n            <button onClick={onClick} className='btn' style={{ backgroundColor: color }}>{text}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nButton.protoTypes = {\r\n    color: PropTypes.string,\r\n    text: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelBlue',\r\n    onClick: () => { },\r\n    text: 'Button'\r\n}\r\n\r\nexport default Button;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\n\r\nconst Header = ({ title, onAddClick, showForm }) => {\r\n\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <header> <h1>{title}</h1></header>\r\n            {!showForm ? <Button color='green' text='Add' onClick={onAddClick} /> : <Button color='red' text='close' onClick={onAddClick} />}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nHeader.defaultProps = {\r\n    title: 'Taskify'\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n}\r\n\r\n\r\nexport default Header\r\n","import { FaInfoCircle, FaTimes } from 'react-icons/fa'\r\n\r\n\r\nexport const Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div className=\"rowC\">\r\n            <div className={task.reminder ? 'task reminder' : 'task'} onDoubleClick={() => onToggle(task.id)}>\r\n                <h3>{task.text} <FaTimes style={{ color: 'red', cursor: 'pointer' }} onClick={() => onDelete(task.id)} /> </h3>\r\n                <h4>{task.time}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { Task } from \"./Task\";\r\nimport { FaInfoCircle } from 'react-icons/fa'\r\n\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n    return (\r\n        <div>\r\n            <FaInfoCircle /> Double click on the task to turn on/off reminder\r\n            <br />\r\n            <ul>\r\n                {\r\n                    tasks.map(task => {\r\n                        return <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle} />\r\n                    })\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tasks;\r\n","import Button from \"./Button\";\r\nimport { useState } from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst AddTask = ({ onAddTask }) => {\r\n    const [text, setText] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [reminder, setReminder] = useState(false);\r\n    const id = uuidv4();\r\n    return (\r\n        <form className=\"add-form\" onSubmit={(e) => {\r\n            e.preventDefault();\r\n            if (!text) alert('Please enter a task')\r\n            else if (!date) alert('Please select Date & Time')\r\n            else {\r\n                onAddTask({ id, text, date, reminder })\r\n                setText('');\r\n                setDate('');\r\n                setReminder(false);\r\n            }\r\n        }}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input type=\"text\" placeholder=\"Add task\" value={text} onChange={(e) => setText(e.target.value)} />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Day & Time</label>\r\n                <input type=\"datetime-local\" placeholder=\"Add Day & Time\" value={date} onChange={(e) => setDate(e.target.value)} />\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input type=\"checkbox\" name=\"reminder\" checked={reminder} onChange={(e) => setReminder(e.currentTarget.checked)} />\r\n            </div>\r\n            <Button text='Save Task' color='black' />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nexport default AddTask;","\r\nconst Footer = () => {\r\n    return (\r\n        <div>\r\n            <footer>Developed using using React.js</footer>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Footer;","import { useState } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport Footer from './components/Footer';\n\nfunction App() {\n\n\n  const [tasks, setTasks] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n\n\n\n  const deleteTask = (id) => {\n    setTasks(tasks.filter(task => task.id !== id));\n  }\n\n\n  const addTask = (task) => {\n    setTasks([...tasks, task]);\n  }\n\n  const toggleReminder = (taskId) => {\n    setTasks(tasks.map(task => {\n      if (task.id === taskId) {\n        task.reminder = !task.reminder\n      }\n      return task;\n    }));\n  }\n\n\n  const onAddClick = () => {\n    setShowForm(!showForm)\n  }\n\n  return (\n    <>\n      <div className=\"container\">\n        <Header title=\"Taskify\" showForm={showForm} onAddClick={onAddClick} />\n        {showForm && <AddTask onAddTask={addTask} />}\n        <hr />\n        <br />\n        {\n          tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} /> : 'No tasks!'\n        }\n      </div>\n      <div className=\"footer\">\n        <Footer />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}